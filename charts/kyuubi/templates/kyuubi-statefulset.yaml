{{/*
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "kyuubi.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "kyuubi.selectorLabels" . | nindent 6 }}
  serviceName: {{ .Release.Name }}-headless
  minReadySeconds: {{ .Values.minReadySeconds }}
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  {{- with .Values.updateStrategy }}
  updateStrategy: {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "kyuubi.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/conf: {{ include (print $.Template.BasePath "/kyuubi-configmap.yaml") . | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.serviceAccount.name .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name | default .Release.Name }}
      {{- end }}
      {{- if or .Values.priorityClass.name .Values.priorityClass.create }}
      priorityClassName: {{ .Values.priorityClass.name | default .Release.Name }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers: {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      containers:
        - name: kyuubi-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.command }}
          command: {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          {{- with .Values.args }}
          args: {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          env:
            - name: KYUUBI_CONF_DIR
              value: {{ .Values.kyuubiConfDir }}
            - name: SPARK_CONF_DIR
              value: {{ .Values.sparkConfDir }}
            {{- with .Values.env }}
              {{- tpl (toYaml .) $ | nindent 12 }}
            {{- end }}
          {{- with .Values.envFrom }}
          envFrom: {{- tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          ports:
            {{- range $name, $frontend := .Values.server }}
            {{- if $frontend.enabled }}
            - name: {{ $name | kebabcase }}
              containerPort: {{ $frontend.port }}
            {{- end }}
            {{- end }}
            {{- if .Values.monitoring.prometheus.enabled }}
            - name: prometheus
              containerPort: {{ .Values.monitoring.prometheus.port }}
            {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command: ["/bin/bash", "-c", "bin/kyuubi status"]
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command: ["/bin/bash", "-c", "$KYUUBI_HOME/bin/kyuubi status"]
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: conf
              mountPath: {{ .Values.kyuubiConfDir }}
            - name: conf-spark
              mountPath: {{ .Values.sparkConfDir }}
            {{- with .Values.volumeMounts }}
              {{- tpl (toYaml .) $ | nindent 12 }}
            {{- end }}
        {{- with .Values.containers }}
          {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
      volumes:
        - name: conf
          configMap:
            name: {{ .Release.Name }}
        - name: conf-spark
          configMap:
            name: {{ .Release.Name }}-spark
        {{- with .Values.volumes }}
          {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
